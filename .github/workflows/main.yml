name: Update Status Labels 2

on:
 workflow_dispatch:  # Permite execução manual
  project_card:
    types: [moved]

jobs:
  update-label:
    runs-on: ubuntu-latest

    steps:
    - name: Apply label based on project card status
      uses: actions/github-script@v6
      with:
        script: |
          // Definir as labels de status: 'Todo', 'In Progress', 'Done'
          const statusLabels = ['Todo', 'In Progress', 'Done'];

          // Obter o número da issue ou pull request a partir da URL do conteúdo do cartão do projeto
          const contentUrl = context.payload.project_card.content_url;

          // Verificar se é uma issue ou pull request
          if (contentUrl.includes('/issues/') || contentUrl.includes('/pulls/')) {
            const issue_number = contentUrl.split('/').pop();

            // Obter o status atual do card (supondo que o status esteja mapeado de alguma forma)
            const projectId = context.payload.project_card.project_id;
            const columnId = context.payload.project_card.column_id;
            
            // Fazer a chamada para obter os detalhes do projeto e suas colunas
            const { data: projectColumns } = await github.projects.listColumns({
              project_id: projectId
            });

            // Encontrar o nome do status correspondente ao column_id
            const currentStatus = projectColumns.find(column => column.id === columnId).name;

            // Verificar se o status atual corresponde a uma das labels de status
            const newStatusLabel = statusLabels.find(label => label === currentStatus);

            if (newStatusLabel) {
              // Buscar todas as labels atuais da issue
              const { data: currentLabels } = await github.issues.listLabelsOnIssue({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue_number
              });

              // Remover qualquer label de status existente (se houver)
              const labelsToKeep = currentLabels.filter(label => !statusLabels.includes(label.name)).map(label => label.name);

              // Adicionar a nova label de status
              labelsToKeep.push(newStatusLabel);

              // Atualizar as labels da issue
              await github.issues.setLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue_number,
                labels: labelsToKeep
              });
            }
          }
